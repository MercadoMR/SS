Bootstrap: docker
From: alpine:3.15

%setup
    # ESTOS COMANDO SE EJECUTAN EN EL HOST
    CURRENT_DIR=$(pwd)
    if ! [ -e configs.env ]; then
       echo "El archivo configs.env no existe, no se creará el contenedor."
       echo "Saliendo..."
       exit -1
    fi
    set -a
    source configs.env
    set +a
    mkdir -p ${CURRENT_DIR}/${CONTAINER_FOLDER}    
    
%environment
    export OPENTSDB_PORT=4242
    export RETENTION_PERIOD=12
    #unset SINGULARITY_BIND

%post
    apk update && apk add bash curl
    apk add net-snmp net-snmp-tools busybox-extras openssl gettext
    apk add nodejs python3 lm-sensors iproute2 
    
    # AGREGAR REPOSITORIOS EDGE
    cat > /etc/apk/repositories << EOF; $(echo)

https://dl-cdn.alpinelinux.org/alpine/v$(cat /etc/alpine-release | cut -d'.' -f1,2)/main/
https://dl-cdn.alpinelinux.org/alpine/edge/community/
https://dl-cdn.alpinelinux.org/alpine/edge/testing/

EOF
    #sed -i 's|/bin/bash|/usr/bin/zsh|g' file.txt
    # INSTALAR VICTORIAMETRICS
    apk update
    apk add victoria-metrics
    touch ~/victoria.log
    # INSTALAR GRAFANA
    apk add grafana
    # INSTALACION DE NETDATA MANUAL
    curl -Ss 'https://raw.githubusercontent.com/netdata/netdata/master/packaging/installer/install-required-packages.sh' >/tmp/install-required-packages.sh && bash /tmp/install-required-packages.sh -i netdata --non-interactive
    git clone https://github.com/netdata/netdata.git --depth=100 --recursive
    cd netdata
    ./netdata-installer.sh --dont-wait --stable-channel --disable-telemetry --dont-start-it
    
    # (Opcional) INSTALACION DE NETDATA AUTOMATICA
    #bash <(curl -Ss https://my-netdata.io/kickstart.sh) --dont-wait --stable-channel --disable-telemetry --dont-start-it
    
    ### ---------------------------------------------------

    # (Opcion 1) OBTENER LAS VARIABLES DE ENTORNO DESDE UN REPO
    # wget https://raw.githubusercontent.com/MercadoMR/SS/main/configs/configs.env --output-document=./configs.env

    # (Opcion 2) PONER EL ARCHIVO EN LOCAL AL INICIO sea con %files o en %SETUP
    # Suponiendo que el archivo ya está en local solamente cargar las variables desde ahí.

    # CARGAR LAS VARIABLES DE ENTORNO PARA OPCION 1 Y 2   

    # (Opcion 3) PONER LAS VARIABLES POR DEFECTO EN EL ARCHIVO .DEF

    ## SUSTITUCIÓN DE VARIABLES EN TODOS LOS ARCHIVOS 

    # 1.- netdata.conf - Agregar configuraciones de netdata 
    # wget https://raw.githubusercontent.com/MercadoMR/SS/main/configs/netdata.conf --output-document=./netdata.conf
    # test -d /etc/netdata/ || mkdir -p /etc/netdata/
    # (envsubst < netdata.conf) > /etc/netdata/netdata.conf
    
    # 2.- snmp.conf - Agregar configuración del sensor 
    # wget https://raw.githubusercontent.com/MercadoMR/SS/main/configs/snmp.conf --output-document=./snmp.conf
    # test -d /etc/netdata/node.d/ || mkdir -p /etc/netdata/node.d/
    # (envsubst < snmp.conf) > /etc/netdata/node.d/snmp.conf
    
    # 3.- exporting.conf - Agregar configuración de TSDB
    # wget https://raw.githubusercontent.com/MercadoMR/SS/main/configs/exporting.conf --output-document=./exporting.conf
    # (envsubst < exporting.conf) > /etc/netdata/exporting.conf
    
    NOW=`date`
    echo "export NOW=\"${NOW}\"" >> $SINGULARITY_ENVIRONMENT
    
%runscript
    echo "El contenedor ha sido creado el $NOW"
    echo "Arguments received: $*"
    netdata
    nohup victoria-metrics -storageDataPath=$VICTORIA_FOLDER -dedup.minScrapeInterval=30s -retentionPeriod=$RETENTION_PERIOD -opentsdbListenAddr=localhost:$VICTORIA_PORT 1>/dev/null 2>~/victoria.log &
    nohup grafana-server --config /etc/grafana.ini --homepath /usr/share/grafana/ &
    
%test
    ls /etc/
    ls /bin/
    ls /sbin/
    
%labels
    Author MIMR
    Version v0.0.1

%help
    This is a demo container used to illustrate a def file that uses all
    supported sections.
